<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ClientWrapper.SendQueryAsync&lt;TResponse&gt; Method</title><meta name="Title" content="SendQueryAsync&lt;TResponse&gt;" /><meta name="Help.Id" content="M:spider.Wrappers.ClientWrapper.SendQueryAsync``1(GraphQL.Client.Http.GraphQLHttpRequest)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="spider.Wrappers" /><meta name="guid" content="33ae2a05-4e3e-d2dd-8e51-23317f5fa265" /><meta name="Description" content="SendQueryAsync sends a query to the GitHub GraphQL API. If the request fails it will check the response headers for the Retry-After header and wait that amount of seconds before retrying the request." /><meta name="tocFile" content="../toc/IDCAG.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Secodash spider documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Client<wbr />Wrapper<span id="LSTC9BD9746_0" data-languageSpecificText="cpp=::|nu=."></span>Send<wbr />Query<wbr />Async<span id="LSTC9BD9746_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResponse</span><span id="LSTC9BD9746_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Method</h1><div class="summary">
            SendQueryAsync sends a query to the GitHub GraphQL API. If the request fails it will check the response headers
            for the Retry-After header and wait that amount of seconds before retrying the request.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="06873042-2dc1-a475-b400-72117affe70a.htm">spider.Wrappers</a><br /><strong>Assembly:</strong> spider (in spider.exe) Version: 1.0.0+fc7a1b35c0f8728ecbe7255d9fa5b4d3324ce3c6<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">Task</span>&lt;<span class="identifier">GraphQLResponse</span>&lt;TResponse&gt;&gt; <span class="identifier">SendQueryAsync</span>&lt;TResponse&gt;(
	<span class="identifier">GraphQLHttpRequest</span>? <span class="parameter">request</span>
)
</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">request</span>  <span class="noLink">GraphQLHttpRequest</span></dt><dd>The graphql request</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TResponse</span></dt><dd>The response type</dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="noLink">Task</span><span id="LSTC9BD9746_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">GraphQLResponse</span><span id="LSTC9BD9746_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResponse</span></span><span id="LSTC9BD9746_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LSTC9BD9746_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />The response from the graphQL API in the form of GraphQLResponse&lt;TResponse&gt;<h4 class="quickLinkHeader">Implements</h4><a href="c99c6b47-cafc-c1f9-5bfc-0619e04d6dab.htm">IClientWrapper<span id="LSTC9BD9746_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SendQueryAsync<span id="LSTC9BD9746_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TResponse<span id="LSTC9BD9746_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(GraphQLHttpRequest)</a><br /></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="fc87344c-2af9-3651-e15f-d8446278d725.htm">ClientWrapper Class</a></div><div><a href="06873042-2dc1-a475-b400-72117affe70a.htm">spider.Wrappers Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Implements</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>