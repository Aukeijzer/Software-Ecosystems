#
# This file is used to compose the project on the server
# It has some server specific server-side only specifications
#
services:
####
  # Frontend
  nextjs:
    build:
      context: ./front-end/ecodash/
      dockerfile: ./Dockerfile
    networks:
      - secodash-network
    restart: always
    
####
  # nginx proxy server
  nginx:
    build:
      context: ./front-end/nginx/
      dockerfile: ./Dockerfile
    ports:
      - 80:80
      - 443:443
    secrets:
     - ssl-certificate
     - ssl-private-key
    networks:
      - secodash-network
    restart: always
    
#####
  # Spider
  spider-app:
    build:
      context: ./spider/
      dockerfile: ./Dockerfile
    networks:
      - secodash-network
    secrets:
      - git-api-token
    environment:
      API_Token_File: /run/secrets/git-api-token
      ASPNETCORE_URLS: http://*:5205
      Docker_Enviroment: server

#####
  # Backend 
  db:
    image: postgres
    networks:
      - secodash-network
    restart: always
    environment:
      POSTGRES_Username: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
 ####
  # Backend (service) layer application
  backend-app:
    build:
      context: ./back-end/
      dockerfile: ./Dockerfile
    environment:
      ASPNETCORE_URLS: http://*:5003
      Docker_Enviroment: server
    networks:
      - secodash-network
    restart: always
    depends_on:
      - db
      
####
  # Volumes, networks and secrets
volumes:
  postgres-data:

secrets:
  db-password:
    file: secrets/db-password.txt
  git-api-token:
    file: secrets/spider-git-api-token.txt
  ssl-certificate:
    file: secrets/certs/fullchain.pem
  ssl-private-key:
    file: secrets/certs/privkey.pem

networks:
  secodash-network:
    name: secodash-network
    driver: bridge
    external: true